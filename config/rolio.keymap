/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MACOS     0
#define FKEYS     1
#define NUMBERS   2
#define WINDOWS   3
#define W_FKEYS   4
#define W_NUMBERS 5
#define MATHS     6
#define KB_CONFIG 7

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        // Toggle F-Keys Layer

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&mo 1>, <&tog 1>, <&tog 3>;
        };

        // Toggle Numbers layer

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&mo 2>, <&tog 0>, <&tog 2>;
        };

        // Toggle capsword left

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };

        // Toggle capsword right

        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&caps_word>;
        };

        // Toggle Windows layer

        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&tog 0>;
        };

        // Toggle Windows layer

        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RGUI>, <&tog 0>;
        };

        // Backspace a whole word when holding backspace

        backspace_word: backspace_word {
            compatible = "zmk,behavior-hold-tap";
            label = "BACKSPACE_WORD";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&bsp_word>, <&kp>;
        };

        w_backspace_word: w_backspace_word {
            compatible = "zmk,behavior-hold-tap";
            label = "WINDOWS_BACKSPACE_WORD";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&w_bsp_word>, <&kp>;
        };

        //Mac OS Zoom

        mac_zoom: mac_zoom {
            compatible = "zmk,behavior-sensor-rotate";
            label = "MAC_ZOOM";
            #sensor-binding-cells = <0>;
            bindings = <&zoom_in>, <&zoom_out>;
        };

        //Windows OS Zoom

        win_zoom: win_zoom {
            compatible = "zmk,behavior-sensor-rotate";
            label = "WINDOWS_ZOOM";
            #sensor-binding-cells = <0>;
            bindings = <&w_zoom_in>, <&w_zoom_out>;
        };
    };

    macros {
        // Word backspace macros
        // Zoom macros
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Mac OS";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
&kp TAB                  &kp Q  &kp W     &kp E      &kp R  &kp T                        &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S     &kp D      &kp F  &kp G                        &kp H  &kp J  &kp K      &kp L    &kp SEMI  &mt RIGHT_CONTROL SQT
&td2                     &kp Z  &kp X     &kp C      &kp V  &kp B  &kp F16    &kp F17    &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                                &kp LALT  &kp LCTRL  &td4   &td0   &kp ENTER  &kp SPACE  &td1   &td5   &kp RCTRL  &kp DEL
            >;
        };

        f_keys_layer {
            label = "F Keys";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &mac_zoom>;
            bindings = <
&kp ESCAPE  &kp F1      &kp F2        &kp F3        &kp F4      &kp F5                                 &kp F6    &kp F7    &kp F8     &kp F9  &kp F10    &kp F11
&unindent   &bt BT_PRV  &bt BT_NXT    &kp C_PREV    &kp C_PP    &kp C_NEXT                             &lstart   &kp UP    &lend      &scrsh  &kp PG_UP  &kp F12
&trans      &bl BL_TOG  &bl BL_SET 2  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &kp C_MUTE  &reset_zoom  &kp LEFT  &kp DOWN  &kp RIGHT  &scrcr  &kp PG_DN  &kp F13
                        &trans        &trans        &trans      &trans        &trans      &trans       &trans    &trans    &trans     &trans
            >;
        };

        numbers_layer {
            label = "Numbers";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
&kp UNDER  &kp N1    &kp N2          &kp N3           &kp N4    &kp N5                     &kp N6     &kp N7         &kp N8    &kp N9    &kp N0         &trans
&trans     &kp EXCL  &kp AT          &kp HASH         &kp DLLR  &kp PRCNT                  &kp CARET  &kp AMPERSAND  &kp STAR  &kp LPAR  &kp RPAR       &kp FSLH
&trans     &pal      &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE  &kp EQUAL  &trans  &trans  &kp MINUS  &kp PLUS       &kp LBKT  &kp RBKT  &kp BACKSLASH  &kp DOT
                     &trans          &trans           &trans    &trans     &trans  &trans  &trans     &trans         &trans    &trans
            >;
        };

        settings_layer {
            label = "Settings";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &bt BT_PRV    &bt BT_NXT    &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &bt BT_CLR    &bl BL_DEC    &bl BL_TOG    &bl BL_INC    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans        &tog 3        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
