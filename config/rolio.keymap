/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// #define HOST_OS 1  // set to 1 for Linux, default is 0 (Windows)
// #include helper.h

#define DEFAULT   0
#define NUM_SYM   1
#define F_NAV     2

// ZMK_UNICODE_SINGLE(em_dash, N2, N0, N1, N4)
// ZMK_UNICODE_SINGLE(en_dash, N2, N0, N1, N3)

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        num_sym_hold_tap: num_sym_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NUM_SYM_HOLD_TAP";
            bindings = <&tap_layer_num>, <&tap_layer_num>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        fnav_hold_tap: fnav_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "FNAV_HOLD_TAP";
            bindings = <&tap_fnav_layer>, <&tap_fnav_layer>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tilde_backtick: tilde_backtick {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_BACKTICK";
            bindings = <&kp TILDE>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lsft_super: lsft_super {
            compatible = "zmk,behavior-hold-tap";
            label = "LSFT_SUPER";
            bindings = <&kp>, <&l_shift_super>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        rsft_super: rsft_super {
            compatible = "zmk,behavior-hold-tap";
            label = "RSFT_SUPER";
            bindings = <&kp>, <&r_shift_super>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        l_super_sft_ctrl: l_super_sft_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "L_SUPER_SFT_CTRL";
            bindings = <&l_sup_sft_ctr>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        r_super_sft_ctrl: r_super_sft_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "R_SUPER_SFT_CTRL";
            bindings = <&r_sup_sft_ctr>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        layer_key: layer_key {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_KEY";
            bindings = <&lt>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        tap_layer_num: tap_layer_num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1>;
            label = "TAP_LAYER_NUM";
        };

        tap_fnav_layer: tap_fnav_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 2>;
            label = "TAP_FNAV_LAYER";
        };

        l_shift_super: shift_super {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT &sk LGUI>;
            label = "SHIFT_SUPER";
        };

        r_shift_super: r_shift_super {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RIGHT_SHIFT &sk RGUI>;
            label = "R_SHIFT_SUPER";
        };

        l_sup_sft_ctr: sup_sft_ctr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LSHIFT &kp LEFT_CONTROL>;
            label = "SUP_SFT_CTR";
        };

        r_sup_sft_ctr: r_sup_sft_ctr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RGUI &sk RIGHT_SHIFT &sk RIGHT_CONTROL>;
            label = "R_SUP_SFT_CTR";
        };
    };

    combos {
        compatible = "zmk,combos";

        Backtick {
            bindings = <&kp GRAVE>;
            key-positions = <24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "Default";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
&kp TAB                  &kp Q  &kp W                          &kp E           &kp R               &kp T                                               &kp Y           &kp U               &kp I             &kp O                        &kp P     &kp BACKSPACE
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S                          &kp D           &kp F               &kp G                                               &kp H           &kp J               &kp K             &kp L                        &kp SEMI  &mt RIGHT_CONTROL SQT
&none                    &kp Z  &kp X                          &kp C           &kp V               &kp B           &kp F16           &kp F17           &kp N           &kp M               &kp COMMA         &kp DOT                      &kp FSLH  &kp MINUS
                                &l_super_sft_ctrl 0 PAGE_DOWN  &layer_key 2 2  &lsft_super LGUI 0  &layer_key 1 1  &mt LSHIFT ENTER  &mt RSHIFT SPACE  &layer_key 1 1  &rsft_super RGUI 0  &mt LEFT_ALT F11  &r_super_sft_ctrl 0 PAGE_UP
            >;
        };

        num_sym {
            label = "Numbers & Symbols";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&none>;

            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2    &kp NUMBER_3     &kp NUMBER_4  &kp NUMBER_5                  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH         &kp DOLLAR    &kp PERCENT                   &kp CARET     &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &trans
&trans  &tilde_backtick  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE      &kp EQUAL     &trans  &trans  &kp PLUS      &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PG_DN     &trans
                         &trans          &trans           &trans        &trans        &trans  &trans  &trans        &trans         &trans                &trans
            >;
        };

        f_nav {
            label = "F Keys & Navigation";
            sensor-bindings =
                <&inc_dec_kp RIGHT_ARROW LEFT>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;

            bindings = <
&out OUT_TOG  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                         &kp F6    &kp F7      &kp F8      &kp F9      &kp F10  &none
&bt BT_CLR    &kp F11       &kp F12       &kp DEL       &kp PAGE_UP   &kp PAGE_DOWN                  &kp LEFT  &kp DOWN    &kp UP      &kp RIGHT   &none    &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none          &trans  &trans  &none     &bl BL_DEC  &bl BL_INC  &bl BL_TOG  &none    &none
                            &trans        &trans        &trans        &trans         &trans  &trans  &trans    &trans      &trans      &trans
            >;
        };
    };
};
