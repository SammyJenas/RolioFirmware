/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MACOS     0
#define FKEYS     1
#define NUMBERS   2
#define WINDOWS   3
#define W_FKEYS   4
#define W_NUMBERS 5
#define MATHS     6
#define KB_CONFIG 7

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        // Toggle F-Keys Layer
        // Toggle Numbers layer
        // Toggle capsword left
        // Toggle capsword right
        // Toggle Windows layer
        // Toggle Windows layer
        // Backspace a whole word when holding backspace
        //Mac OS Zoom
        //Windows OS Zoom

        num_sym_hold_tap: num_sym_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NUM_SYM_HOLD_TAP";
            bindings = <&tap_layer_num>, <&tap_layer_num>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <41 44>;
        };
    };

    macros {
        // Word backspace macros
        // Zoom macros

        tap_layer_num: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "Default";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
&kp TAB                  &kp Q  &kp W              &kp E         &kp R     &kp T                                        &kp Y                  &kp U     &kp I      &kp O             &kp P     &kp BACKSPACE
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S              &kp D         &kp F     &kp G                                        &kp H                  &kp J     &kp K      &kp L             &kp SEMI  &mt RIGHT_CONTROL SQT
&none                    &kp Z  &kp X              &kp C         &kp V     &kp B                  &kp F16    &kp F17    &kp N                  &kp M     &kp COMMA  &kp DOT           &kp FSLH  &kp MINUS
                                &mt LS(LGUI) HOME  &kp LEFT_ALT  &kp LGUI  &num_sym_hold_tap 0 0  &kp ENTER  &kp SPACE  &num_sym_hold_tap 0 0  &kp RGUI  &kp RALT   &mt RS(RGUI) END
            >;
        };

        num_sym {
            label = "Numbers & Symbols";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&none>;

            bindings = <
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5                           &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &trans
&trans  &bt BT_PRV       &bt BT_NXT       &kp C_PREV       &kp C_PP         &kp C_NEXT                                &lstart          &kp UP           &lend            &scrsh           &kp PG_UP        &trans
&trans  &bl BL_TOG       &bl BL_SET 2     &kp C_VOL_DN     &kp C_MUTE       &kp C_VOL_UP     &kp C_MUTE  &reset_zoom  &kp LEFT         &kp DOWN         &kp RIGHT        &scrcr           &kp PG_DN        &trans
                         &trans           &trans           &trans           &trans           &trans      &trans       &trans           &trans           &trans           &trans
            >;
        };

        f_nav {
            label = "F Keys & Navigation";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
&out OUT_TOG  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                         &kp F6    &kp F7      &kp F8      &kp F9      &kp F10  &none
&bt BT_CLR    &kp F11       &kp F12       &kp DEL       &kp PAGE_UP   &kp PAGE_DOWN                  &kp LEFT  &kp DOWN    &kp UP      &kp RIGHT   &none    &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none          &trans  &trans  &none     &bl BL_DEC  &bl BL_INC  &bl BL_TOG  &none    &none
                            &trans        &trans        &trans        &trans         &trans  &trans  &trans    &trans      &trans      &trans
            >;
        };
    };
};
